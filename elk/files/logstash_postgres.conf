input {
  beats {
    port => 5044
    ssl => false
  }
}

filter {
  grok {   
    patterns_dir => ["./patterns"]
    match => { "message" => "%{QUERY_DATE:db_query_date} \[%{POSINT:db_remote_port}\] %{IP:db_remote_ip_addr} %{USERNAME:db_username}@%{DB_NAME:db_name}\s+LOG:\s+duration: %{NUMBER:db_duration} %{WORD:db_duration_unit}\s+statement:%{GREEDYDATA:db_query}" }
  }

  mutate {
    add_field => { "db_sample_percentage" => 100 }
    convert => { 
      "db_duration" => "float" 
      "db_remote_port" => "integer"
      "db_sample_percentage" => "integer"
      }
  }

  ruby {
    code => '
      db_query = event.get("[db_query]")
      normalized = `pg_query_cli "#{db_query}"`.to_s.gsub(/\s+/, " ").strip.downcase
      event.set("db_normalized_query", normalized)      
    '
  }
}

output {
  elasticsearch {
    hosts => ["localhost:9200"]
    user => elastic
    password => changeme
    sniffing => true
    manage_template => false
    index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
    document_type => "%{[@metadata][type]}"
  }
}